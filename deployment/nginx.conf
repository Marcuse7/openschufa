upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    server unix:///tmp/openschufa.sock fail_timeout=0;
}

server {
    client_max_body_size 100M;
    server_name openschufa.de www.openschufa.de;
    root /var/www/openschufa;

    location ~ ^/(ping|upload|send_id)/ {
        uwsgi_pass app_server;
        include uwsgi_params;
        uwsgi_param UWSGI_SCHEME $scheme;
    }

    location / {
        try_files $uri $uri/ /index.html;
    }




    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/www.openschufa.de/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.openschufa.de/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}


server {
    if ($host = www.openschufa.de) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = openschufa.de) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name openschufa.de www.openschufa.de;
    listen 80;
    return 404; # managed by Certbot


}

